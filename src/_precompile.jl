function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(CSTParser.Expr_char, (CSTParser.LITERAL,))
    precompile(CSTParser.Expr_int, (CSTParser.LITERAL,))
    precompile(CSTParser.INSTANCE, (CSTParser.ParseState,))
    precompile(CSTParser.LtoR, (Int64,))
    precompile(CSTParser._get_import_block, (CSTParser.EXPR{CSTParser.Import}, Int64, Expr))
    precompile(CSTParser._get_import_block, (CSTParser.EXPR{CSTParser.Using}, Int64, Expr))
    precompile(CSTParser._get_import_block, (CSTParser.EXPR{CSTParser.ImportAll}, Int64, Expr))
    precompile(CSTParser._parse_ref, (CSTParser.IDENTIFIER, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser._parse_ref, (CSTParser.IDENTIFIER, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.Ref}, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.IDENTIFIER, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser._parse_ref, (CSTParser.IDENTIFIER, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser._parse_ref, (CSTParser.BinarySyntaxOpCall, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.UnarySyntaxOpCall, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.Call}, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.Curly}, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.Call}, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.Vect}, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.Curly}, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser._parse_ref, (CSTParser.LITERAL, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser._parse_ref, (CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.adjustspan, (CSTParser.IDENTIFIER,))
    precompile(CSTParser.check_base, (String, Bool))
    precompile(CSTParser.check_base, ())
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.FileH}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.FileH},))
    precompile(CSTParser.check_span, (CSTParser.LITERAL, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.ModuleH}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.MODULE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.IDENTIFIER, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Block}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Import}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.IMPORT}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.PUNCTUATION, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Export}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.EXPORT}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.MacroName}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.FunctionDef}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.FUNCTION}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.END}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Abstract}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.ABSTRACT}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.TYPE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Curly}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.BinarySyntaxOpCall, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.IDENTIFIER,))
    precompile(CSTParser.check_span, (CSTParser.OPERATOR,))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Call}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Call},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Quotenode}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Quotenode},))
    precompile(CSTParser.check_span, (CSTParser.UnarySyntaxOpCall, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Curly},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Block},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.TupleH}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.TupleH},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.If}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.IF}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.BinaryOpCall, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.BinaryOpCall,))
    precompile(CSTParser.check_span, (CSTParser.LITERAL,))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Quote}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.OPERATOR, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.InvisBrackets}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Comparison}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.ELSEIF}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.UnarySyntaxOpCall,))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.InvisBrackets},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Ref}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.ELSE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.MacroCall}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.GlobalRefDoc}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Macro}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.MACRO}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.BinarySyntaxOpCall,))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Quote},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Ref},))
    precompile(CSTParser.check_span, (CSTParser.UnaryOpCall, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.UnaryOpCall,))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.For}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.FOR}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.TypedComprehension}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.TypedComprehension},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Generator}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.QUOTE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Primitive}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.PRIMITIVE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Return}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.RETURN}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Let}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.LET}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.BREAK}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.x_Str}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.x_Str},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Const}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.CONST}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Using}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.USING}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Struct}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.STRUCT}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Mutable}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.MUTABLE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Return},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Vect}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Vect},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.While}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.WHILE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Kw}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Parameters}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.MacroCall},))
    precompile(CSTParser.check_span, (CSTParser.ConditionalOpCall, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.ChainOpCall}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.ChainOpCall},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Try}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.TRY}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.FINALLY}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.BREAK},))
    precompile(CSTParser.check_span, (CSTParser.ConditionalOpCall,))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.CONTINUE},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.StringH},))
    precompile(CSTParser.check_span, (CSTParser.WhereOpCall, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.WhereOpCall,))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Do}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.DO}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Begin}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.BEGIN}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Global}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.GLOBAL}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Local}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.LOCAL}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.CATCH}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.ColonOpCall}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Do},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.FunctionDef},))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.CONTINUE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Try},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Vcat}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Vcat},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.If},))
    precompile(CSTParser.check_span, (CSTParser.PUNCTUATION,))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.TypedVcat}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Comparison},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Comprehension}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Comprehension},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.ColonOpCall},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.TypedVcat},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.BareModule}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.BAREMODULE}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Begin},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.ImportAll}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.KEYWORD{Tokenize.Tokens.IMPORTALL}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.For},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Filter}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Hcat}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Hcat},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Row}, Array{Any,1}))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Let},))
    precompile(CSTParser.check_span, (CSTParser.EXPR{CSTParser.Flatten}, Array{Any,1}))
    precompile(CSTParser.closer, (CSTParser.ParseState,))
    precompile(CSTParser.convert_iter_assign, (CSTParser.BinaryOpCall,))
    precompile(CSTParser.convert_iter_assign, (CSTParser.BinarySyntaxOpCall,))
    precompile(CSTParser.convert_iter_assign, (CSTParser.EXPR{CSTParser.Filter},))
    precompile(CSTParser.convert_iter_assign, (CSTParser.IDENTIFIER,))
    precompile(CSTParser.convert_iter_assign, (CSTParser.EXPR{CSTParser.Ref},))
    precompile(CSTParser.dropleadlingnewline, (CSTParser.LITERAL,))
    precompile(CSTParser.error_eof, (CSTParser.ParseState, Int64, CSTParser.Diagnostics.ErrorCodes, String))
    precompile(CSTParser.error_token, (CSTParser.ParseState, Tokenize.Tokens.Token))
    precompile(CSTParser.error_unexpected, (CSTParser.ParseState, Tokenize.Tokens.Token))
    precompile(CSTParser.expr_import, (CSTParser.EXPR{CSTParser.Import}, Symbol))
    precompile(CSTParser.expr_import, (CSTParser.EXPR{CSTParser.Using}, Symbol))
    precompile(CSTParser.expr_import, (CSTParser.EXPR{CSTParser.ImportAll}, Symbol))
    precompile(CSTParser.fix_range, (CSTParser.BinarySyntaxOpCall,))
    precompile(CSTParser.fix_range, (CSTParser.BinaryOpCall,))
    precompile(CSTParser.get_inner_gen, (CSTParser.EXPR{CSTParser.Generator}, Array{Any,1}, Array{Any,1}))
    precompile(CSTParser.get_inner_gen, (CSTParser.EXPR{CSTParser.Flatten}, Array{Any,1}, Array{Any,1}))
    precompile(CSTParser.is_eq, (CSTParser.OPERATOR,))
    precompile(CSTParser.is_exor, (CSTParser.OPERATOR,))
    precompile(CSTParser.is_func_call, (CSTParser.BinarySyntaxOpCall,))
    precompile(CSTParser.is_func_call, (CSTParser.WhereOpCall,))
    precompile(CSTParser.is_in, (CSTParser.OPERATOR,))
    precompile(CSTParser.is_pairarrow, (CSTParser.OPERATOR,))
    precompile(CSTParser.is_range, (CSTParser.BinaryOpCall,))
    precompile(CSTParser.is_range, (CSTParser.BinarySyntaxOpCall,))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.isajuxtaposition, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.isbinaryop, (Tokenize.Tokens.Kind,))
    precompile(CSTParser.isinstance, (Tokenize.Tokens.Token,))
    precompile(CSTParser.iskw, (Tokenize.Tokens.Token,))
    precompile(CSTParser.ispunctuation, (Tokenize.Tokens.Token,))
    precompile(CSTParser.issyntaxcall, (CSTParser.OPERATOR,))
    precompile(CSTParser.issyntaxunarycall, (CSTParser.OPERATOR,))
    precompile(CSTParser.isunaryop, (Tokenize.Tokens.Kind,))
    precompile(CSTParser.isunaryop, (CSTParser.IDENTIFIER,))
    precompile(CSTParser.isunaryop, (CSTParser.BinarySyntaxOpCall,))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.InvisBrackets},))
    precompile(CSTParser.isunaryop, (CSTParser.BinaryOpCall,))
    precompile(CSTParser.isunaryop, (CSTParser.WhereOpCall,))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Call},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Curly},))
    precompile(CSTParser.isunaryop, (CSTParser.LITERAL,))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.TupleH},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Ref},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Generator},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Flatten},))
    precompile(CSTParser.isunaryop, (CSTParser.UnarySyntaxOpCall,))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.If},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.MacroCall},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.x_Cmd},))
    precompile(CSTParser.isunaryop, (CSTParser.UnaryOpCall,))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Vect},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.ChainOpCall},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.StringH},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Quotenode},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.x_Str},))
    precompile(CSTParser.isunaryop, (CSTParser.ConditionalOpCall,))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Comparison},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Comprehension},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Quote},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Do},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.TypedComprehension},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Begin},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Vcat},))
    precompile(CSTParser.isunaryop, (CSTParser.EXPR{CSTParser.Hcat},))
    precompile(CSTParser.julia_normalization_map, (Int32, Ptr{Void}))
    precompile(CSTParser.lex_ws_comment, (Tokenize.Lexers.Lexer{Base.AbstractIOBuffer{Array{UInt8,1}},Tokenize.Tokens.Token}, Char))
    precompile(CSTParser.longest_common_prefix, (String, String))
    precompile(CSTParser.make_error, (CSTParser.ParseState, UnitRange{Int64}, CSTParser.Diagnostics.ErrorCodes, String))
    precompile(CSTParser.non_dotted_op, (Tokenize.Tokens.Token,))
    precompile(CSTParser.norm_ast, (Expr,))
    precompile(CSTParser.norm_ast, (Bool,))
    precompile(CSTParser.norm_ast, (Symbol,))
    precompile(CSTParser.norm_ast, (QuoteNode,))
    precompile(CSTParser.norm_ast, (Int64,))
    precompile(CSTParser.norm_ast, (String,))
    precompile(CSTParser.norm_ast, (GlobalRef,))
    precompile(CSTParser.norm_ast, (Char,))
    precompile(CSTParser.norm_ast, (UInt8,))
    precompile(CSTParser.norm_ast, (Void,))
    precompile(CSTParser.norm_ast, (Float64,))
    precompile(CSTParser.norm_ast, (UInt64,))
    precompile(CSTParser.norm_ast, (UInt32,))
    precompile(CSTParser.norm_ast, (UInt16,))
    precompile(CSTParser.norm_ast, (UInt128,))
    precompile(CSTParser.norm_ast, (Float32,))
    precompile(CSTParser.norm_ast, (Int128,))
    precompile(CSTParser.parse, (CSTParser.ParseState, Bool))
    precompile(CSTParser.parse, (String, Bool))
    precompile(CSTParser.parse_abstract, (CSTParser.ParseState,))
    precompile(CSTParser.parse_array, (CSTParser.ParseState,))
    precompile(CSTParser.parse_begin, (CSTParser.ParseState,))
    precompile(CSTParser.parse_bitstype, (CSTParser.ParseState,))
    precompile(CSTParser.parse_block, (CSTParser.ParseState, Array{Any,1}, Tuple{Tokenize.Tokens.Kind,Tokenize.Tokens.Kind,Tokenize.Tokens.Kind}, Bool))
    precompile(CSTParser.parse_block, (CSTParser.ParseState, Array{Any,1}, Tuple{Tokenize.Tokens.Kind}, Bool))
    precompile(CSTParser.parse_block, (CSTParser.ParseState, Array{Any,1}))
    precompile(CSTParser.parse_block, (CSTParser.ParseState, Array{Any,1}, Tuple{Tokenize.Tokens.Kind,Tokenize.Tokens.Kind}, Bool))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.parse_call, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.parse_call_and, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call_decl, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call_exor, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call_issubt, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call_issupt, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call_minus, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call_not, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_call_plus, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_cell1d, (CSTParser.ParseState,))
    precompile(CSTParser.parse_comma_sep, (CSTParser.ParseState, Array{Any,1}, Bool, Bool, Bool))
    precompile(CSTParser.parse_comma_sep, (CSTParser.ParseState, Array{Any,1}))
    precompile(CSTParser.parse_comma_sep, (CSTParser.ParseState, Array{Any,1}, Bool, Bool))
    precompile(CSTParser.parse_comma_sep, (CSTParser.ParseState, Array{Any,1}, Bool))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_comp_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.parse_compound, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.parse_const, (CSTParser.ParseState,))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.parse_curly, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.parse_do, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.parse_doc, (CSTParser.ParseState,))
    precompile(CSTParser.parse_dot_mod, (CSTParser.ParseState, Bool))
    precompile(CSTParser.parse_dot_mod, (CSTParser.ParseState,))
    precompile(CSTParser.parse_end, (CSTParser.ParseState,))
    precompile(CSTParser.parse_export, (CSTParser.ParseState,))
    precompile(CSTParser.parse_expression, (CSTParser.ParseState,))
    precompile(CSTParser.parse_for, (CSTParser.ParseState,))
    precompile(CSTParser.parse_function, (CSTParser.ParseState,))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.parse_generator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.parse_global, (CSTParser.ParseState,))
    precompile(CSTParser.parse_if, (CSTParser.ParseState, Bool))
    precompile(CSTParser.parse_imports, (CSTParser.ParseState,))
    precompile(CSTParser.parse_kw, (CSTParser.ParseState,))
    precompile(CSTParser.parse_let, (CSTParser.ParseState,))
    precompile(CSTParser.parse_local, (CSTParser.ParseState,))
    precompile(CSTParser.parse_macro, (CSTParser.ParseState,))
    precompile(CSTParser.parse_macrocall, (CSTParser.ParseState,))
    precompile(CSTParser.parse_module, (CSTParser.ParseState,))
    precompile(CSTParser.parse_mutable, (CSTParser.ParseState,))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_anon_func, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_colon, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_cond, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_dot, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_eq, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_power, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.IDENTIFIER, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.BinaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.OPERATOR, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.WhereOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.LITERAL, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.UnaryOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.ConditionalOpCall, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_operator_where, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}, CSTParser.OPERATOR))
    precompile(CSTParser.parse_paren, (CSTParser.ParseState,))
    precompile(CSTParser.parse_primitive, (CSTParser.ParseState,))
    precompile(CSTParser.parse_quote, (CSTParser.ParseState,))
    precompile(CSTParser.parse_ranges, (CSTParser.ParseState,))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.parse_ref, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.parse_return, (CSTParser.ParseState,))
    precompile(CSTParser.parse_string_or_cmd, (CSTParser.ParseState, Bool))
    precompile(CSTParser.parse_string_or_cmd, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_string_or_cmd, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_struct, (CSTParser.ParseState, Bool))
    precompile(CSTParser.parse_try, (CSTParser.ParseState,))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.IDENTIFIER))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.BinarySyntaxOpCall))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.InvisBrackets}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.BinaryOpCall))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.WhereOpCall))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Call}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Curly}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.LITERAL))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TupleH}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Ref}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Generator}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Flatten}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.UnarySyntaxOpCall))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.If}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.MacroCall}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Cmd}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.UnaryOpCall))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vect}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.ChainOpCall}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.StringH}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quotenode}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.x_Str}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.ConditionalOpCall))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comparison}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Comprehension}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Quote}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Do}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.TypedComprehension}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Begin}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Vcat}))
    precompile(CSTParser.parse_tuple, (CSTParser.ParseState, CSTParser.EXPR{CSTParser.Hcat}))
    precompile(CSTParser.parse_typealias, (CSTParser.ParseState,))
    precompile(CSTParser.parse_unary, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_unary_colon, (CSTParser.ParseState, CSTParser.OPERATOR))
    precompile(CSTParser.parse_while, (CSTParser.ParseState,))
    precompile(CSTParser.precedence, (Tokenize.Tokens.Kind,))
    precompile(CSTParser.precedence, (CSTParser.OPERATOR,))
    precompile(CSTParser.read_comment, (Tokenize.Lexers.Lexer{Base.AbstractIOBuffer{Array{UInt8,1}},Tokenize.Tokens.Token},))
    precompile(CSTParser.read_ws, (Tokenize.Lexers.Lexer{Base.AbstractIOBuffer{Array{UInt8,1}},Tokenize.Tokens.Token}, Bool, Bool))
    precompile(CSTParser.remlineinfo!, (Expr,))
    precompile(CSTParser.remlineinfo!, (Symbol,))
    precompile(CSTParser.remlineinfo!, (QuoteNode,))
    precompile(CSTParser.remlineinfo!, (Int64,))
    precompile(CSTParser.remlineinfo!, (Bool,))
    precompile(CSTParser.remlineinfo!, (String,))
    precompile(CSTParser.remlineinfo!, (Float64,))
    precompile(CSTParser.remlineinfo!, (Char,))
    precompile(CSTParser.remlineinfo!, (GlobalRef,))
    precompile(CSTParser.remlineinfo!, (UInt8,))
    precompile(CSTParser.remlineinfo!, (UInt64,))
    precompile(CSTParser.remlineinfo!, (UInt32,))
    precompile(CSTParser.remlineinfo!, (UInt16,))
    precompile(CSTParser.remlineinfo!, (UInt128,))
    precompile(CSTParser.remlineinfo!, (Float32,))
    precompile(CSTParser.sized_uint_literal, (String, Int64))
    precompile(CSTParser.sized_uint_oct_literal, (String,))
    precompile(CSTParser.skip_to_nl, (String, Int64))
    precompile(CSTParser.span, (CSTParser.LITERAL,))
    precompile(CSTParser.span, (CSTParser.IDENTIFIER,))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.FileH},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.ERROR},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Block},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.If},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Let},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Try},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Kw},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Parameters},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Call},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.FunctionDef},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Begin},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Quote},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.For},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.While},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Macro},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.MacroName},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.InvisBrackets},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Export},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Const},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Global},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Local},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Return},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Abstract},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Bitstype},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Primitive},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.TypeAlias},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.TupleH},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Vect},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.DictComprehension},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Comprehension},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Vcat},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Hcat},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Row},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Cell1d},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Quotenode},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.MacroCall},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.x_Str},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.TopLevel},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Generator},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Filter},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Flatten},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Do},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Curly},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.x_Cmd},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.ColonOpCall},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Comparison},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.ChainOpCall},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Mutable},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Struct},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Import},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.TypedComprehension},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Ref},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.TypedVcat},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.TypedHcat},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.StringH},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.ModuleH},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.Using},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.BareModule},))
    precompile(CSTParser.update_span!, (CSTParser.EXPR{CSTParser.ImportAll},))
    precompile(CSTParser.utf8proc_map_custom, (String, Int64, Function))
    precompile(CSTParser.update_to_default!, (CSTParser.Closer, CSTParser.TMP))
    precompile(CSTParser.update_from_tmp!, (CSTParser.Closer, CSTParser.TMP))
end
